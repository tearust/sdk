[package]
name = "tea-sdk"
version = "0.1.0"
edition = "2021"

[dependencies]
tea-codec = { path = "codecs/tea-codec" }

tea-actorx-core = { path = "actorx/actorx-core" }
tea-actorx-host = { path = "actorx/actorx-host", optional = true }
tea-actorx-runtime = { path = "actorx/actorx-runtime", optional = true }
tea-actorx-signer = { path = "actorx/actorx-signer", optional = true }

actor-txns = { path = "codecs/actor-txns" }
runtime-codec = { path = "codecs/runtime-codec" }
solc-codec = { path = "codecs/solc-codec" }
tapp-common = { path = "codecs/tapp-common" }
vmh-codec = { path = "codecs/vmh-codec" }

adapter-actor-codec = { path = "system-actors/adapter-actor", optional = true }
billing-actor-codec = { path = "system-actors/billing-actor", optional = true }
console-actor-codec = { path = "system-actors/console-actor", optional = true }
crypto-actor-codec = { path = "system-actors/crypto-actor", optional = true }
env-actor-codec = { path = "system-actors/env-actor", optional = true }
http-actor-codec = { path = "system-actors/http-actor", optional = true }
ipfs-relay-actor-codec = { path = "system-actors/ipfs-relay-actor", optional = true }
keyvalue-actor-codec = { path = "system-actors/keyvalue-actor", optional = true }
layer1-actor-codec = { path = "system-actors/layer1-actor", optional = true }
layer1-service-actor-codec = { path = "system-actors/layer1-service-actor", optional = true }
libp2p-actor-codec = { path = "system-actors/libp2p-actor", optional = true }
nitro-actor-codec = { path = "system-actors/nitro-actor", optional = true }
orbitdb-actor-codec = { path = "system-actors/orbitdb-actor", optional = true }
persist-actor-codec = { path = "system-actors/persist-actor", optional = true }
ra-actor-codec = { path = "system-actors/ra-actor", optional = true }
replica-actor-codec = { path = "system-actors/replica-actor", optional = true }
replica-service-actor-codec = { path = "system-actors/replica-service-actor", optional = true }
state-receiver-codec = { path = "system-actors/state-receiver", optional = true }
tappstore-actor-codec = { path = "system-actors/tappstore-actor", optional = true }
tokenstate-actor-codec = { path = "system-actors/tokenstate-actor", optional = true }
tokenstate-service-actor-codec = { path = "system-actors/tokenstate-service-actor", optional = true }

wasm-actor-utils = { path = "utils/wasm-actor-utils", features = [
    "http",
], optional = true }
wasm-client-actor-utils = { path = "utils/wasm-client-actor-utils", optional = true }

[workspace]
resolver = "2"
members = [
    "codecs/*",
    "codecs/tea-codec/macros",
    "actorx/actorx-*",
    "actorx/examples/*",
    "system-actors/*",
    "utils/*",
]

[features]
default = []
wasm = [
    "tea-actorx-runtime",
    "system-actors",
    "wasm-actor-utils",
    "wasm-client-actor-utils",
]
host = ["tea-actorx-host", "system-actors"]
system-actors = [
    "adapter-actor-codec",
    "billing-actor-codec",
    "console-actor-codec",
    "crypto-actor-codec",
    "env-actor-codec",
    "http-actor-codec",
    "ipfs-relay-actor-codec",
    "keyvalue-actor-codec",
    "layer1-actor-codec",
    "layer1-service-actor-codec",
    "libp2p-actor-codec",
    "nitro-actor-codec",
    "orbitdb-actor-codec",
    "persist-actor-codec",
    "ra-actor-codec",
    "replica-actor-codec",
    "replica-service-actor-codec",
    "state-receiver-codec",
    "tappstore-actor-codec",
    "tokenstate-actor-codec",
    "tokenstate-service-actor-codec",
]
signer = ["tea-actorx-signer"]
mock = ["wasm", "tea-actorx-runtime/mock"]
unlimited = ["tea-actorx-host/unlimited"]
nitro = ["vmh-codec/nitro", "env-actor-codec/nitro"]
simulator = ["vmh-codec/simulator", "env-actor-codec/simulator"]
__test = [
    "runtime-codec/__test",
    "solc-codec/__test",
    "tapp-common/__test",
    "vmh-codec/__test",
    "libp2p-actor-codec/__test",
    "wasm-actor-utils/__test",
    "wasm-client-actor-utils/__test",
]

[workspace.dependencies]
base64 = "0.13.0"
bincode = "1.2.0"
bytes = "1.4.0"
chrono = { version = "0.4.22", features = ["serde"] }
crossbeam = "0.8.2"
crossbeam-channel = "0.5.6"
dashmap = "5.4"
ed25519-dalek = "1.0.0"
futures = "0.3.25"
gluesql-core = { version = "0.13.1" }
hex = "0.4.0"
http = "0.2.8"
http-body = "0.4.5"
httparse = "1.8.0"
hyper = "0.14.23"
impl-trait-for-tuples = "0.2.2"
lazy_static = "1.4.0"
log = { version = "0.4.17", features = ["std", "serde"] }
num-derive = "0.3.3"
num-traits = "0.2.15"
parking_lot = "0.12.1"
primitive-types = { version = "0.12.1", features = ["serde"] }
prost = "0.11.0"
regex = { version = "1.7.0" }
serde = { version = "1.0.147", features = ["derive", "rc"] }
serde_bytes = "0.11.3"
serde_derive = "1.0.147"
serde_json = "1.0.87"
sha2 = "0.10.0"
strum = "0.24.1"
strum_macros = "0.24.3"
smallvec = { version = "1.9.0", features = [
    "serde",
    "write",
    "union",
    "const_generics",
    "const_new",
] }
thiserror = "1.0.22"
tracing = "0.1.37"
tracing-subscriber = { version = "0.3", features = ["registry", "env-filter"] }
tokio = { version = "1.21.2" }
once_cell = "1.17.0"
openssl = { version = "0.10", features = ["vendored"] }
wasmer = { version = "3.0.1", features = ["tracing"] }
wasmer-middlewares = "3.0.1"
wasmer-types = "3.0.1"
