syntax = "proto3";
package rpc;

import "p2p.proto";

message AdapterServerRequest {
    string uuid = 1;
    oneof msg {
        AdapterHttpRequest AdapterHttpRequest = 2;
        AdapterSocketioHttpRequest AdapterSocketioHttpRequest = 3;
        AdapterSocketioRequest AdapterSocketioRequest = 4;
    }
}

message HttpGeneralRequest {
    uint64 seqNumber = 1;
    oneof msg {
        HttpExecutionRequest HttpExecutionRequest = 6;
        UpgradeVersionRequest UpgradeVersionRequest = 7;
        ImportRequest ImportRequest = 8;
    }
}

message SocketioClientRequest {
    oneof msg {
        SocketioHttpRequest SocketioHttpRequest = 4;
        SocketioRequest SocketioRequest = 5;
    }
}

message SocketioClientResponse {
    oneof msg {
        HttpExecutionResponse HttpExecutionResponse = 5;
        HttpExecutionError HttpExecutionError = 6;
    }
}

message SocketioRequest {
    string path = 1;
    string key = 2;
    bytes value = 3; // serde_json encoded
}

message SocketioHttpRequest {
    string action = 1;
    repeated HttpExecutionHeader headers = 2;
    HttpExecutionTimeout timeout = 3;
    string method = 4;
    HttpExecutionPayload payload = 5;
}

message HttpExecutionRequest {
    string requestUrl = 1;
    repeated HttpExecutionHeader headers = 2;
    HttpExecutionTimeout timeout = 3;
    string method = 4;
    HttpExecutionPayload payload = 5;
}

message UpgradeVersionRequest {
  string upgradeType = 1;
  string url = 2;
  string version = 3;
  repeated ModuleItem moduleItems = 4;
}
message ModuleItem {
  string name = 1;
  string url = 2;
}

message ImportRequest {
  string url = 1;
}

message UpgradeVersionResponse {
  bytes app = 1;
  repeated DownloadModule modules = 2;
}
message DownloadModule {
  string name = 1;
  bytes buf = 2;
}

message HttpExecutionTimeout {
    uint64 milliseconds = 1;
}

message HttpExecutionPayload {
    bytes jsonBody = 1;
}

message HttpExecutionHeader {
    string key = 1;
    string value = 2;
}

message HttpExecutionResponse {
    string responseJson = 1;
}

message HttpExecutionError {
    string errorMessage = 1;
}

message AdapterHttpRequest {
    string action = 2;
    bytes payload = 3;
    string actor = 4;
}

message AdapterSocketioHttpRequest {
    string action = 2;
    bytes payload = 3;
    string actor = 4;
}

message AdapterSocketioRequest {
    string path = 1;
    string key = 2;
    bytes value = 3; // serde_json encoded
    repeated bytes params = 4;
    optional int64 ack_id = 5;
}